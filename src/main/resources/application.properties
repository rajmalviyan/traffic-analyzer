server.port=8080

#spring.profiles.active=dev,memdb

spring.h2.console.enabled=true
#spring.h2.console.path=/h2

spring.jpa.hibernate.jdbc.time_zone=UTC
spring.jackson.time-zone=GMT
server.jetty.accesslog.time-zone=GMT
spring.cache.ehcache.config=classpath:ehcache.xml

#spring.datasource.url=jdbc:h2:file:~/db/volume-db;AUTO_SERVER=TRUE
#spring.datasource.username=sa
#spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop

rest.api.endpoint=http://demo3247578.mockable.io/volume/
rest.api.ssl.keystore.location=C:/opt/a.cer
rest.api.ssl.keystore.password=test

logging.level.org.hibernate.sql=TRACE
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=DEBUG
spring.jpa.show-sql=true
#spring.h2.console.enabled=true
logging.level.org.springframework=debug


# the next line is very important it names the ddl work
# H2 does not support enums
# In order to fake support for them we have to declare a
# domain called enum and mapped it to a varchar - the size
# I picked at random but it is "good enough" for now.
# H2 will run this before hibernate creates the schema and
# then the schema creation will succeed
spring.datasource.url=jdbc:h2:mem:test;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE